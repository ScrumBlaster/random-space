AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Template that creates Ec2 instance on which will be
  installed Gitlab Runner. Ec2 will be part od Autoscaling Group. S3 bucket will
  be created for storing CloudFormation templates generated by Gitlab Runner
Parameters:
  VpcId:
    Description: VPC Id
    Type: String
    Default: vpc-0f8a463d3c84ab974
  SubnetId:
    Type: String
    Default: subnet-058b88b8168ced8d5
  AvailabilityZone:
    Type: String
    Default: eu-central-1b
  SSHKey:
    Type: String
    Default: Repair
  InstanceType:
    Type: String
    Default: t2.micro
  RootVolumeSize:
    Type: String
    Default: 10
  AmiId:
    Type: String
    Default: ami-0b418580298265d5c
  GitlabURL:
    Description: URL of Gitlab instance
    Type: String
    Default: 'http://gitlab.common.internal/'
  GitlabRunnerToken:
    Description: >-
      Use this registration token (project specific token) during Gitlab Runner
      setup
    Type: String
    Default: yNvbwhvaNofG1Byyh7gq
Resources:
  sgHCMBuildServerGitlabRunner:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: Gitlab_Runner_SG
      GroupDescription: Gitlab_Runner_SG
      VpcId: !Ref VpcId
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 82398c38-4e27-4365-a4db-a017c85249d2
  ingHCMBuildServerGitlabRunner:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !GetAtt
        - sgHCMBuildServerGitlabRunner
        - GroupId
      IpProtocol: TCP
      FromPort: 0
      ToPort: 22
      CidrIp: 0.0.0.0/0
      Description: Open_Gitlab_Runner_SG
    DependsOn: sgHCMBuildServerGitlabRunner
  ipHCMBuildServer:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: S3-CICDrole
      Roles:
        - !Ref roleHCMBuildServer
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 96a7e825-4a5d-46c1-b4c9-27b4f88e7600
  roleHCMBuildServer:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      RoleName: roleS3-CICDrole
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b6b64129-f6b4-4c09-a05f-83637d744651
  policyHCMBuildServer:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: policyHCMBuildServer
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:*'
            Resource: '*'
      Roles:
        - !Ref roleHCMBuildServer
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 1bb76dad-44a7-4957-ac1c-3a194c04990b
  ec2HCMBuildServer:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceInitiatedShutdownBehavior: stop
      Monitoring: false
      SubnetId: !Ref SubnetId
      ImageId: !Ref AmiId
      IamInstanceProfile: !Ref ipHCMBuildServer
      SecurityGroupIds:
        - !Ref sgHCMBuildServerGitlabRunner
      KeyName: !Ref SSHKey
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !Ref RootVolumeSize
      Tags:
        - Key: Name
          Value: CI/CD CF
        - Key: Testfor
          Value: CloudFormation
        - Key: User
          Value: Marko
      UserData: !Base64
        'Fn::Sub': |
          #!/bin/bash

          apt update -y
          apt install default-jre -y
          apt install awscli -y

          if [[ $(uname --m) = "x86_64"  ]]; then

                                   # Linux x86-64
                                    wget -O /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64

                              elif [[ $(uname --m) = "x86"  ]]; then

                                   # Linux x86
                                    wget -O /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-386

                              elif [[ $(uname --m) = "arm"  ]]; then
                                   # Linux arm
                                    wget -O /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-arm
                              fi

                    apt-get install gitlab-runner

                    gitlab-runner register \
                      --non-interactive \
                      --url "${GitlabURL}" \
                      --registration-token "${GitlabRunnerToken}" \
                      --executor "shell" \
                      --tag-list "frontend, history" \
                      --run-untagged="true"

                    gitlab-runner restart service